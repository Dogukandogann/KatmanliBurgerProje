@using KatmanliBurger_UI.Helpers;
@model BasketListViewModel

@{
	Layout = null;
	int count = 0;
	decimal basketTotalPrice = 0;
	decimal basketTotalPriceWithTax = 0;
	decimal tax = 0;
	ICollection<BasketLine> liste = Model.Basket.BasketLines;
	
	
}

<!DOCTYPE html>

<html>

@await Component.InvokeAsync("_UILayoutHeadComponentPartial")

<body class="sub_page">

	@await Component.InvokeAsync("_MenuNavbarComponentPartial")
	<br />
	<br />
	<div class="container-fluid">
		<div class="row px-xl-5">
			<div class="col-12">
				<nav class="breadcrumb bg-dark mb-30">
					<a class="breadcrumb-item text-white" href="/Default/Index">Ana Sayfa</a>
					<a class="breadcrumb-item text-white" href="/Menu/Index">Menü</a>
					<span class="breadcrumb-item active">Sepetiniz</span>
				</nav>
			</div>
		</div>
	</div>
	<div class="container-fluid">
		<div class="row px-xl-5">
			<div class="col-lg-8 table-responsive mb-5">
				<table class="table table-light table-borderless table-hover text-center mb-0">
					<thead class="thead-dark">
						<tr>
							<th>#</th>
							<th>Ürün Adı</th>
							<th>Adet</th>
							<th>Fiyat</th>
							<th>Toplam</th>
							<th>Detay</th>
							<th>Sil</th>
						</tr>
					</thead>
					<tbody class="align-middle">
						@{
							basketTotalPrice = Model.Basket.BasketLines.Sum(item =>
							(item.Burger?.Price ?? 0) * item.BurgerQuantity +
							(item.Menu?.Price ?? 0) * item.MenuQuantity +
							(item.ByProduct?.Price ?? 0) * item.ByProductQuantity);

							tax = basketTotalPrice / 100 * 10;
							basketTotalPriceWithTax = basketTotalPrice + tax;
						}
						@foreach (var item in Model.Basket.BasketLines)
						{
							if (item.Burger is not null)
							{
								count++;

								<tr>
									<td class="align-middle">@count</td>
									<td class="align-middle">@item.Burger.Name</td>
									<td class="align-middle">
										<div class="input-group d-flex justify-content-center">
											<a class="btn fa fa-minus fa-small" aria-hidden="true" id="burgerMinus" asp-action="RemoveFromBasket" asp-controller="Baskets" asp-route-burgerId="@item.Burger.Id" asp-route-removeAll="0"></a>
											<span class="input-group-text" id="burgerQuantity" data-burgerQuantity="@item.BurgerQuantity">@item.BurgerQuantity</span>
											<a class="btn fa fa-plus fa-small" aria-hidden="true" id="burgerPlus" asp-action="AddToBasket" asp-controller="Baskets" asp-route-burgerId="@item.Burger.Id"></a>
										</div>
									</td>
									<td class="align-middle">@item.Burger.Price</td>
									<td class="align-middle">
										<span id="burgerTotalAmount">@(item.Burger.Price * item.BurgerQuantity)</span>
									</td>
									<td></td>
									<td class="align-middle btn-delete"><a class="btn btn-sm btn-danger" asp-action="RemoveFromBasket" asp-controller="Baskets" asp-route-burgerId="@item.Burger.Id" asp-route-removeAll="1"><i class="fa fa-times"></i></a></td>
								</tr>
							}
							if (item.Menu is not null)
							{
								count++;

								<tr>
									<td class="align-middle">@count</td>
									<td class="align-middle">@item.Menu.Name</td>
									<td class="align-middle">
										<div class="input-group d-flex justify-content-center">
											<a class="btn fa fa-minus fa-small" aria-hidden="true" id="menuMinus" asp-action="RemoveFromBasket" asp-controller="Baskets" asp-route-menuId="@item.Menu.Id" asp-route-removeAll="0"></a>
											<span class="input-group-text" id="menuQuantity" data-menuQuantity="@item.MenuQuantity">@item.MenuQuantity</span>
											<a class="btn fa fa-plus fa-small" aria-hidden="true" id="menuPlus" asp-action="AddToBasket" asp-controller="Baskets" asp-route-menuId="@item.Menu.Id"></a>
										</div>
									</td>
									<td class="align-middle">@item.Menu.Price</td>
									<td class="align-middle">@(item.Menu.Price * item.MenuQuantity)</td>
									<td class="align-middle">
										<a class="btn btn-sm btn-info" data-bs-target="#exampleModalToggle" data-bs-toggle="modal"><i class="fa fa-search"></i></a>
									</td>
									<td class="align-middle btn-delete"><a class="btn btn-sm btn-danger" asp-action="RemoveFromBasket" asp-route-menuId="@item.Menu.Id" asp-route-removeAll="1"><i class="fa fa-times"></i></a></td>
								</tr>
							}
							if (item.ByProduct is not null)
							{
								count++;

								<tr>
									<td class="align-middle">@count</td>
									<td class="align-middle">@item.ByProduct.Name</td>
									<td class="align-middle">
										<div class="input-group d-flex justify-content-center">
											<a class="btn fa fa-minus fa-small" aria-hidden="true" id="productMinus" asp-action="RemoveFromBasket" asp-controller="Baskets" asp-route-byProductId="@item.ByProduct.Id" asp-route-removeAll="0"></a>
											<span class="input-group-text" data-productQuantity="@item.ByProductQuantity" id="productQuantity">@item.ByProductQuantity</span>
											<a class="btn fa fa-plus fa-small" aria-hidden="true" id="productPlus" asp-action="AddToBasket" asp-controller="Baskets" asp-route-byProductId="@item.ByProduct.Id"></a>
										</div>
									</td>
									<td class="align-middle">@item.ByProduct.Price</td>
									<td class="align-middle">@(item.ByProduct.Price * item.ByProductQuantity)</td>
									<td></td>
									<td class="align-middle btn-delete"><a class="btn btn-sm btn-danger" asp-action="RemoveFromBasket" asp-route-byProductId="@item.ByProduct.Id" asp-route-removeAll="1"><i class="fa fa-times"></i></a></td>
								</tr>
							}
						}
					</tbody>

				</table>
			</div>
			<div class="col-log-4">
				<form>
					<div class="input-group">
						<input type="text" id="couponcode" class="form-control border-1 p-4" placeholder="Kupon Kodunuz" />
						<div>
							<a style="height:48px;padding-top:11px; margin-left:5px;" class="btn btn-warning" id="btncouponcode">Kuponu Uygula</a>
						</div>
					</div>
				</form>
				<br />
				<h5 class="section-title position-relative  mb-3"><span class="bg-warning pr-3">Sepet Özeti</span></h5>
				<div class="bg-light p-30 mb-5">
					<div id="container" class="border-bottom pb-2">
						<div class="d-flex justify-content-between mb-6">
							<h6>Toplam Tutar</h6>
							<h6><span id="totalprice">@basketTotalPrice</span>₺</h6>
						</div>
						<div class="d-flex justify-content-between">
							<h6 class="font-weight-medium">Kdv Oranı</h6>
							<h6 id="kdv" class="font-weight-medium">@tax</>₺</h6>
						</div>
						<br />
					</div>
					<div class="pt-2">
						<div class="d-flex justify-content-between mt-2">
							<h5>Toplam Tutar</h5>
							<h5><span id="totalpricewithkdv">@basketTotalPriceWithTax</span>₺</h5>
						</div>
						<br />
						@{
							if (Model.Basket.BasketLines.Count > 0)
							{
								<a id="btnchecked" class="btn btn-block btn-warning font-weight-bold my-3" asp-controller="Baskets" asp-action="AddToOrder">Siparişi Tamamla</a>
							}
							else
							{
								<button class="btn btn-block btn-warning font-weight-bold my-3" disabled>Siparişi Tamamla</button>
							}
						}

					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="exampleModalToggle" aria-hidden="true" aria-labelledby="exampleModalToggleLabel" tabindex="-1">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="exampleModalToggleLabel">Sipariş Detay</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><i class="fa fa-close"></i></button>
				</div>
				<div class="modal-body">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>

	@await Component.InvokeAsync("_UILayoutFooterComponentPartial")

	@await Component.InvokeAsync("_UILayoutScriptComponentPartial")

</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="..." crossorigin="anonymous"></script>



<script>
	document.addEventListener('DOMContentLoaded', function () {
		var modalBody = document.querySelector('.modal-body');
		var description = `@Model.Basket.BasketLines.FirstOrDefault()?.Description`;

		if (description !== null && description !== undefined) {

			description = description.replace(/&#xA;/g, '\n').replace(/&#xD;/g, '\r');
			var lines = description.split('\n\r\n');
			var table = document.createElement('table');
			table.classList.add('table');

			var thead = document.createElement('thead');
			var tr = document.createElement('tr');

			var th1 = document.createElement('th');
			th1.textContent = 'Ürün Adı';

			var th2 = document.createElement('th');
			th2.textContent = 'Değer';

			tr.appendChild(th1);
			tr.appendChild(th2);
			thead.appendChild(tr);
			table.appendChild(thead);

			var tbody = document.createElement('tbody');
			lines.forEach(function (line) {
				var tr = document.createElement('tr');

				if (line.includes(':')) {
					var parts = line.split(':');
					var td1 = document.createElement('td');
					var td2 = document.createElement('td');

					td1.innerHTML = parts[0].trim();
					var value = parts[1].trim();
					td2.innerHTML = value;

					if (value.toLowerCase() === 'var') {
						tr.style.backgroundColor = 'rgba(0, 255, 0, 0.3)';
						td2.innerHTML = '<i class="fa fa-check"></i>';
					} else if (value.toLowerCase() === 'yok') {
						td2.innerHTML = '<i class="fa fa-close"></i>';
						tr.style.backgroundColor = 'rgba(255, 0, 0, 0.3)';
					}

					td2.style.textAlign = 'center';

					tr.appendChild(td1);
					tr.appendChild(td2);
				} else {
					var td = document.createElement('td');
					td.innerHTML = line.trim();
					tr.appendChild(td);
				}

				tbody.appendChild(tr);
			});

			table.appendChild(tbody);
			modalBody.appendChild(table);

		} else {
			modalBody.innerHTML = '<p>No description available</p>';
		}
	});
</script>


<script>
	const minusButton = document.getElementById('burgerMinus');
	const plusButton = document.getElementById('burgerPlus');
	const quantityDisplay = document.getElementById('burgerQuantity');
	const burgerQuantitySpan = document.getElementById('burgerQuantity');
	const burgerQuantityData = burgerQuantitySpan.getAttribute('data-burgerQuantity');
	let quantity = burgerQuantityData;
	quantityDisplay.textContent = quantity;

	plusButton.addEventListener('click', () => {
		if (quantity < 10) {
			quantity++;
			quantityDisplay.textContent = quantity;
		}
	});

	minusButton.addEventListener('click', () => {
		if (quantity > 1) {
			quantity--;
			quantityDisplay.textContent = quantity;
		}
	});
</script>

<script>
	const menuMinusButton = document.getElementById('menuMinus');
	const menuPlusButton = document.getElementById('menuPlus');
	const menuQuantityDisplay = document.getElementById('menuQuantity');
	const menuQuantitySpan = document.getElementById('menuQuantity');
	const menuQuantityData = menuQuantitySpan.getAttribute('data-menuQuantity');
	let menuQuantity = menuQuantityData;
	menuQuantityDisplay.textContent = menuQuantity;

	menuPlusButton.addEventListener('click', () => {
		if (menuQuantity < 10) {
			menuQuantity++;
			menuQuantityDisplay.textContent = menuQuantity;
		}
	});

	menuMinusButton.addEventListener('click', () => {
		if (menuQuantity > 1) {
			menuQuantity--;
			menuQuantityDisplay.textContent = menuQuantity;
		}
	});
</script>

<script>
	const productMinusButton = document.getElementById('productMinus');
	const productPlusButton = document.getElementById('productPlus');
	const productQuantityDisplay = document.getElementById('productQuantity');
	const productQuantitySpan = document.getElementById('productQuantity');
	const productQuantityData = productQuantitySpan.getAttribute('data-productQuantity');
	let productQuantity = productQuantityData;
	productQuantityDisplay.textContent = productQuantity;

	productPlusButton.addEventListener('click', () => {
		if (productQuantity < 10) {
			productQuantity++;
			productQuantityDisplay.textContent = productQuantity;
		}
	});

	productMinusButton.addEventListener('click', () => {
		if (productQuantity > 1) {
			productQuantity--;
			productQuantityDisplay.textContent = productQuantity;
		}
	});
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
	@if (TempData["exception"] != null)
	{
		<text>
			Swal.fire("@TempData["exception"]");
		</text>
	}
	@if (TempData["hata"] != null)
	{
		<text>
			Swal.fire("@TempData["hata"]");
		</text>
	}
</script>